{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mateus.ranzani\\\\Desktop\\\\personal_finance_ReactJs\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { Dashboard } from \"./components/Dashboard\";\nimport { Header } from \"./components/Header\";\nimport { GlobalStyle } from \"./styles/global\";\nimport { useState } from \"react\";\nimport { NewTransactionModal } from \"./components/NewTransactionModal\";\nimport { TransactionProvider } from \"./TransactionContext\"; // Modal.setAppElement('root')\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const [isNewTransactionModalOpen, setIsNewTransactionModalOpen] = useState(false);\n\n  function handleOpenNewTransactionModal() {\n    setIsNewTransactionModalOpen(true);\n  }\n\n  function handleCloseNewTransactionModal() {\n    setIsNewTransactionModalOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TransactionProvider, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onOpenNewTransactionModal: handleOpenNewTransactionModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTransactionModal, {\n      isOpen: isNewTransactionModalOpen,\n      onRequestClose: handleCloseNewTransactionModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YWa5Wmz82gI4ha22AwMdN+zJHN8=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Dashboard","Header","GlobalStyle","useState","NewTransactionModal","TransactionProvider","App","isNewTransactionModalOpen","setIsNewTransactionModalOpen","handleOpenNewTransactionModal","handleCloseNewTransactionModal"],"sources":["C:/Users/mateus.ranzani/Desktop/personal_finance_ReactJs/src/App.tsx"],"sourcesContent":["import { Dashboard } from \"./components/Dashboard\";\r\nimport { Header } from \"./components/Header\";\r\nimport { GlobalStyle } from \"./styles/global\";\r\nimport { useState } from \"react\";\r\nimport { NewTransactionModal } from \"./components/NewTransactionModal\";\r\nimport { TransactionProvider } from \"./TransactionContext\";\r\n\r\n// Modal.setAppElement('root')\r\n\r\nexport function App() {\r\n  const [isNewTransactionModalOpen, setIsNewTransactionModalOpen] =\r\n    useState(false);\r\n\r\n  function handleOpenNewTransactionModal() {\r\n    setIsNewTransactionModalOpen(true);\r\n  }\r\n\r\n  function handleCloseNewTransactionModal() {\r\n    setIsNewTransactionModalOpen(false);\r\n  }\r\n\r\n  return (\r\n    <TransactionProvider>\r\n      <Header onOpenNewTransactionModal={handleOpenNewTransactionModal} />\r\n      <Dashboard />\r\n\r\n      <NewTransactionModal\r\n        isOpen={isNewTransactionModalOpen}\r\n        onRequestClose={handleCloseNewTransactionModal}\r\n      />\r\n\r\n      <GlobalStyle />\r\n    </TransactionProvider>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,wBAA1B;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,mBAAT,QAAoC,kCAApC;AACA,SAASC,mBAAT,QAAoC,sBAApC,C,CAEA;;;AAEA,OAAO,SAASC,GAAT,GAAe;EAAA;;EACpB,MAAM,CAACC,yBAAD,EAA4BC,4BAA5B,IACJL,QAAQ,CAAC,KAAD,CADV;;EAGA,SAASM,6BAAT,GAAyC;IACvCD,4BAA4B,CAAC,IAAD,CAA5B;EACD;;EAED,SAASE,8BAAT,GAA0C;IACxCF,4BAA4B,CAAC,KAAD,CAA5B;EACD;;EAED,oBACE,QAAC,mBAAD;IAAA,wBACE,QAAC,MAAD;MAAQ,yBAAyB,EAAEC;IAAnC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QAFF,eAIE,QAAC,mBAAD;MACE,MAAM,EAAEF,yBADV;MAEE,cAAc,EAAEG;IAFlB;MAAA;MAAA;MAAA;IAAA,QAJF,eASE,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;GAzBeJ,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}