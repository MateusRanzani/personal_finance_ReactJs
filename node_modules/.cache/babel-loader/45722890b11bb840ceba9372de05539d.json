{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mateus.ranzani\\\\Desktop\\\\personal_finance_ReactJs\\\\src\\\\TransactionContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { api } from \"./services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionsContext = /*#__PURE__*/createContext([]);\nexport function TransactionProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    api.get(\"/transactions\").then(response => setTransactions(response.data.transactions));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: transactions,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TransactionProvider, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = TransactionProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","api","TransactionsContext","TransactionProvider","children","transactions","setTransactions","get","then","response","data"],"sources":["C:/Users/mateus.ranzani/Desktop/personal_finance_ReactJs/src/TransactionContext.tsx"],"sourcesContent":["import { createContext, ReactNode, useEffect, useState } from \"react\"\r\nimport { api } from \"./services/api\";\r\n\r\ninterface TransactionsInterface {\r\n    id: number;\r\n    title: string;\r\n    type: string;\r\n    category: string;\r\n    amount: number;\r\n    createdAt: string;\r\n  }\r\n\r\ninterface TransactionsProviderProps {\r\n    children: ReactNode;\r\n}\r\n\r\n\r\nexport const TransactionsContext = createContext<TransactionsInterface[]>([]);\r\n\r\nexport function TransactionProvider({children}: TransactionsProviderProps) {\r\n    const [transactions, setTransactions] = useState<TransactionsInterface[]>([]);\r\n\r\n    useEffect(() => {\r\n      api\r\n        .get(\"/transactions\")\r\n        .then((response) => setTransactions(response.data.transactions));\r\n    }, []);\r\n\r\n    return (\r\n        <TransactionsContext.Provider value={transactions}>\r\n            {children}\r\n        </TransactionsContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,SAASC,GAAT,QAAoB,gBAApB;;AAgBA,OAAO,MAAMC,mBAAmB,gBAAGJ,aAAa,CAA0B,EAA1B,CAAzC;AAEP,OAAO,SAASK,mBAAT,OAAoE;EAAA;;EAAA,IAAvC;IAACC;EAAD,CAAuC;EACvE,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAA0B,EAA1B,CAAhD;EAEAD,SAAS,CAAC,MAAM;IACdE,GAAG,CACAM,GADH,CACO,eADP,EAEGC,IAFH,CAESC,QAAD,IAAcH,eAAe,CAACG,QAAQ,CAACC,IAAT,CAAcL,YAAf,CAFrC;EAGD,CAJQ,EAIN,EAJM,CAAT;EAMA,oBACI,QAAC,mBAAD,CAAqB,QAArB;IAA8B,KAAK,EAAEA,YAArC;IAAA,UACKD;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH;;GAdeD,mB;;KAAAA,mB"},"metadata":{},"sourceType":"module"}