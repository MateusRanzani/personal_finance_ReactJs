{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mateus.ranzani\\\\Desktop\\\\personal_finance_ReactJs\\\\src\\\\TransactionContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { api } from \"./services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionsContext = /*#__PURE__*/createContext({});\nexport function TransactionProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    api.get(\"/transactions\").then(response => setTransactions(response.data.transactions));\n  }, []);\n\n  async function createTransaction(transactionInput) {\n    const response = await api.post(\"/transactions\", transactionInput);\n    const {\n      transaction\n    } = response.data;\n  }\n\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: {\n      transactions,\n      createTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionProvider, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = TransactionProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","api","TransactionsContext","TransactionProvider","children","transactions","setTransactions","get","then","response","data","createTransaction","transactionInput","post","transaction"],"sources":["C:/Users/mateus.ranzani/Desktop/personal_finance_ReactJs/src/TransactionContext.tsx"],"sourcesContent":["import { createContext, ReactNode, useEffect, useState } from \"react\";\r\nimport { api } from \"./services/api\";\r\n\r\ninterface TransactionsInterface {\r\n  id: number;\r\n  title: string;\r\n  type: string;\r\n  category: string;\r\n  amount: number;\r\n  createdAt: string;\r\n}\r\n\r\ninterface TransactionsProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\ninterface TransactionsContextData {\r\n  transactions: TransactionsInterface[];\r\n  createTransaction: (transaction: TransactionInput) => Promise<void>;\r\n}\r\n\r\ntype TransactionInput = Omit<TransactionsInterface, \"id\" | \"createdAt\">;\r\n\r\nexport const TransactionsContext = createContext<TransactionsContextData>(\r\n  {} as TransactionsContextData\r\n);\r\n\r\nexport function TransactionProvider({ children }: TransactionsProviderProps) {\r\n  const [transactions, setTransactions] = useState<TransactionsInterface[]>([]);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\"/transactions\")\r\n      .then((response) => setTransactions(response.data.transactions));\r\n  }, []);\r\n\r\n  async function createTransaction(transactionInput: TransactionInput) {\r\n    const response = await api.post(\"/transactions\", transactionInput);\r\n    const { transaction } = response.data;\r\n  }\r\n\r\n  return (\r\n    <TransactionsContext.Provider value={{ transactions, createTransaction }}>\r\n      {children}\r\n    </TransactionsContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,SAASC,GAAT,QAAoB,gBAApB;;AAsBA,OAAO,MAAMC,mBAAmB,gBAAGJ,aAAa,CAC9C,EAD8C,CAAzC;AAIP,OAAO,SAASK,mBAAT,OAAsE;EAAA;;EAAA,IAAzC;IAAEC;EAAF,CAAyC;EAC3E,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAA0B,EAA1B,CAAhD;EAEAD,SAAS,CAAC,MAAM;IACdE,GAAG,CACAM,GADH,CACO,eADP,EAEGC,IAFH,CAESC,QAAD,IAAcH,eAAe,CAACG,QAAQ,CAACC,IAAT,CAAcL,YAAf,CAFrC;EAGD,CAJQ,EAIN,EAJM,CAAT;;EAMA,eAAeM,iBAAf,CAAiCC,gBAAjC,EAAqE;IACnE,MAAMH,QAAQ,GAAG,MAAMR,GAAG,CAACY,IAAJ,CAAS,eAAT,EAA0BD,gBAA1B,CAAvB;IACA,MAAM;MAAEE;IAAF,IAAkBL,QAAQ,CAACC,IAAjC;EACD;;EAED,oBACE,QAAC,mBAAD,CAAqB,QAArB;IAA8B,KAAK,EAAE;MAAEL,YAAF;MAAgBM;IAAhB,CAArC;IAAA,UACGP;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAnBeD,mB;;KAAAA,mB"},"metadata":{},"sourceType":"module"}